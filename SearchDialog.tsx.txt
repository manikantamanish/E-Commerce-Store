import { useState, useEffect } from 'react';
import { useLocation } from 'wouter';
import { useQuery } from '@tanstack/react-query';
import { 
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/dialog';
import { Input } from '@/components/ui/input';
import { cn } from '@/lib/utils';
import { Product } from '@shared/schema';
import { X, Search } from 'lucide-react';
interface SearchDialogProps {
  isOpen: boolean;
  onClose: () => void;
}
const SearchDialog = ({ isOpen, onClose }: SearchDialogProps) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [, navigate] = useLocation();
  
  const { data: products } = useQuery<Product[]>({
    queryKey: ['/api/products'],
  });
  
  // Reset search term when dialog opens
  useEffect(() => {
    if (isOpen) {
      setSearchTerm('');
    }
  }, [isOpen]);
  // Filter products based on search term
  const filteredProducts = products?.filter(product => 
    product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    product.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
    product.category.toLowerCase().includes(searchTerm.toLowerCase())
  ) || [];
  const handleProductClick = (productId: number) => {
    navigate(`/products/${productId}`);
    onClose();
  };
  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle className="text-center">Search Products</DialogTitle>
        </DialogHeader>
        
        <div className="relative mt-2">
          <Search className="absolute left-3 top-2.5 h-4 w-4 text-muted-foreground" />
          <Input
            placeholder="Search for products..."
            className="pl-10 focus:ring-2 focus:ring-primary focus:border-primary"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            autoFocus
          />
          {searchTerm && (
            <button 
              onClick={() => setSearchTerm('')}
              className="absolute right-3 top-2.5"
            >
              <X className="h-4 w-4 text-muted-foreground" />
            </button>
          )}
        </div>
        
        <div className="mt-4 max-h-[60vh] overflow-auto">
          {searchTerm.length > 0 && (
            <>
              <div className="text-sm text-muted-foreground mb-2">
                {filteredProducts.length} {filteredProducts.length === 1 ? 'result' : 'results'}
              </div>
              
              {filteredProducts.length > 0 ? (
                <div className="space-y-2">
                  {filteredProducts.map(product => (
                    <div 
                      key={product.id}
                      className="p-3 rounded-md hover:bg-secondary cursor-pointer flex items-center"
                      onClick={() => handleProductClick(product.id)}
                    >
                      <div className="h-12 w-12 bg-primary/10 rounded-md overflow-hidden mr-3">
                        <img 
                          src={product.imageUrl}
                          alt={product.name}
                          className="h-full w-full object-cover"
                        />
                      </div>
                      <div>
                        <div className="font-medium">{product.name}</div>
                        <div className="text-sm text-muted-foreground">{product.category}</div>
                      </div>
                      <div className="ml-auto font-medium">${product.price.toFixed(2)}</div>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="text-center py-6">
                  <p className="font-medium">No products found</p>
                  <p className="text-sm text-muted-foreground mt-1">
                    Try searching for something else
                  </p>
                </div>
              )}
            </>
          )}
          
          {searchTerm.length === 0 && (
            <div className="text-center py-6">
              <p className="font-medium">Start typing to search</p>
              <p className="text-sm text-muted-foreground mt-1">
                Search for products by name, description or category
              </p>
            </div>
          )}
        </div>
      </DialogContent>
    </Dialog>
  );
};
export default SearchDialog;